<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>四人过桥问题</title>
    <link href="/2025/03/16/crossing-bridge/"/>
    <url>/2025/03/16/crossing-bridge/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>有四个人需要在夜间过桥，过桥时必须携带手电筒。他们只有一个手电筒，手电筒必须由人携带过桥。他们单独过桥的时间分别为<code>[1, 2, 5, 10]</code>分钟，两人同行时以较慢者的速度为准。桥每次最多只能承受2个人。问：如何在最短的时间内让所有人都过桥？</p><h1 id="随机选择算法"><a href="#随机选择算法" class="headerlink" title="随机选择算法"></a>随机选择算法</h1><p>在这个问题中，我们将随机选择过桥和返回的组合，寻找用时最短的方案。<br>以下是随机选择解法的Python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> combinations<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> choice<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">solve</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-comment"># 初始化左岸和右岸的人员列表</span><br>    left, right = <span class="hljs-built_in">sorted</span>(a), []<br>    torch_state = <span class="hljs-literal">True</span>  <span class="hljs-comment"># 手电筒状态，True在左岸, False在右岸</span><br>    time = <span class="hljs-number">0</span>  <span class="hljs-comment"># 总时间</span><br>    steps = []  <span class="hljs-comment"># 记录步骤</span><br><br>    <span class="hljs-keyword">while</span> left:<br>        <span class="hljs-keyword">if</span> torch_state:<br>            <span class="hljs-comment"># 随机选择两个人过桥</span><br>            move = choice(<span class="hljs-built_in">list</span>(combinations(left, <span class="hljs-number">2</span>)))<br>            time += <span class="hljs-built_in">max</span>(move)  <span class="hljs-comment"># 过桥时间取决于较慢的人</span><br>            steps.append(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;move&#125;</span>过桥&quot;</span>)<br>            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> move:<br>                left.remove(p)<br>                right.append(p)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># 随机选择一个人返回</span><br>            p = choice(right)<br>            time += p<br>            steps.append(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;p&#125;</span>返回&quot;</span>)<br>            right.remove(p)<br>            left = <span class="hljs-built_in">sorted</span>(left + [p])<br>        torch_state = <span class="hljs-keyword">not</span> torch_state  <span class="hljs-comment"># 切换手电筒状态</span><br><br>    <span class="hljs-keyword">return</span> time, <span class="hljs-string">&quot; &quot;</span>.join(steps)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    store = &#123;&#125;  <span class="hljs-comment"># 存储方案</span><br>    min_time = <span class="hljs-built_in">float</span>(<span class="hljs-string">&quot;inf&quot;</span>)  <span class="hljs-comment"># 最小时间初始化为无穷大</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10000</span>):<br>        time, steps = solve([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>])<br>        <span class="hljs-keyword">if</span> time &lt;= min_time <span class="hljs-keyword">and</span> steps <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> store:<br>            store[steps] = min_time = time<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;第<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span>次循环 <span class="hljs-subst">&#123;time&#125;</span>分钟&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br><br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;最短用时：<span class="hljs-subst">&#123;min_time&#125;</span>分钟&quot;</span>)<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> store.items():<br>        <span class="hljs-keyword">if</span> v == min_time:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;方案<span class="hljs-subst">&#123;i&#125;</span>：<span class="hljs-subst">&#123;k&#125;</span>&quot;</span>)<br>            i += <span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h2 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h2><ol><li><p><strong>初始化</strong>：</p><ul><li><code>left</code>：左岸的人员列表，初始为 <code>[1, 2, 5, 10]</code>。</li><li><code>right</code>：右岸的人员列表，初始为空。</li><li><code>torch_state</code>：手电筒的状态，<code>True</code> 表示在左岸，<code>False</code> 表示在右岸。</li><li><code>time</code>：总时间，初始为0。</li><li><code>steps</code>：记录每一步的操作。</li></ul></li><li><p><strong>过桥逻辑</strong>：</p><ul><li>当手电筒在左岸时，随机选择两个人过桥，并计算过桥时间（取决于较慢的那个人）。</li></ul></li><li><p><strong>返回逻辑</strong>：</p><ul><li>当手电筒在右岸时，随机选择一个人返回，并计算返回时间。</li></ul></li><li><p><strong>循环与状态切换</strong>：</p><ul><li>重复上述步骤，直到左岸没有人。</li><li>每次操作后切换手电筒的状态。</li></ul></li><li><p><strong>主程序</strong>：</p><ul><li>使用 <code>store</code> 字典存储用时较短的解决方案。</li><li>进行10000次随机尝试，找到用时最短的方案。</li></ul></li></ol><h2 id="示例输出"><a href="#示例输出" class="headerlink" title="示例输出"></a>示例输出</h2><p>运行代码后，程序会输出所有用时最短的方案。例如：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs txt">第1次循环 20分钟<br>第5次循环 20分钟<br>第11次循环 19分钟<br>第28次循环 19分钟<br>第41次循环 19分钟<br>第76次循环 17分钟<br>第158次循环 17分钟<br><br>最短用时：17分钟<br>方案1：(1, 2)过桥 1返回 (5, 10)过桥 2返回 (1, 2)过桥<br>方案2：(1, 2)过桥 2返回 (5, 10)过桥 1返回 (1, 2)过桥<br></code></pre></td></tr></table></figure><h1 id="常规算法"><a href="#常规算法" class="headerlink" title="常规算法"></a>常规算法</h1><p>算法思路：</p><ol><li>优先让最快的两人过桥，减少总时间。</li><li>让最快的两人交替返回，确保手电筒能高效传递。</li><li>让最慢的两人一起过桥，避免时间浪费。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">solve</span>(<span class="hljs-params">a</span>):<br>    left, right = <span class="hljs-built_in">sorted</span>(a), []<br>    time, state, steps = <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, []<br><br>    <span class="hljs-keyword">while</span> left:<br>        <span class="hljs-keyword">if</span> state % <span class="hljs-number">2</span>:<br>            move = left[:<span class="hljs-number">2</span>] <span class="hljs-keyword">if</span> state % <span class="hljs-number">4</span> == <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> left[-<span class="hljs-number">2</span>:]<br>            time += <span class="hljs-built_in">max</span>(move)<br>            steps.append(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;move&#125;</span>过桥&quot;</span>)<br>            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> move:<br>                left.remove(p)<br>                right.append(p)<br>        <span class="hljs-keyword">else</span>:<br>            p = <span class="hljs-built_in">min</span>(right)<br>            time += p<br>            steps.append(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;p&#125;</span>返回&quot;</span>)<br>            right.remove(p)<br>            left = <span class="hljs-built_in">sorted</span>(left + [p])<br>        state += <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">return</span> time, <span class="hljs-string">&quot; &quot;</span>.join(steps)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    time, steps = solve([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>])<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;最短用时：<span class="hljs-subst">&#123;time&#125;</span>分钟\n方案：<span class="hljs-subst">&#123;steps&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过随机选择算法，我们成功找到了两个解决方案，最短用时是17分钟。</p><p>虽然这种方法在理论上能够找到解，但其效率较低，且依赖于大量的随机尝试，因此仅供娱乐和学习使用，并不建议在实际问题中应用。对于类似的组合优化问题，建议使用更加系统化和高效的算法来解决。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>24点</title>
    <link href="/2024/05/03/24dian/"/>
    <url>/2024/05/03/24dian/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> itertools<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solve24</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,num</span>):<br>        self.numset=<span class="hljs-built_in">set</span>(itertools.permutations(num))<br>        self.operate=[<span class="hljs-string">&#x27;+&#x27;</span>,<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-string">&#x27;*&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>]<br>        self.operatelist=<span class="hljs-built_in">list</span>(itertools.product(self.operate,repeat=<span class="hljs-number">3</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">solve</span>(<span class="hljs-params">self</span>):<br>        s1=[<span class="hljs-string">&#x27;(&#123;&#125;&#123;&#125;(&#123;&#125;&#123;&#125;&#123;&#125;))&#123;&#125;&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(num[<span class="hljs-number">0</span>],sign[<span class="hljs-number">0</span>],num[<span class="hljs-number">1</span>],sign[<span class="hljs-number">1</span>],num[<span class="hljs-number">2</span>],sign[<span class="hljs-number">2</span>],num[<span class="hljs-number">3</span>]) <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> self.numset <span class="hljs-keyword">for</span> sign <span class="hljs-keyword">in</span> self.operatelist]<br>        s2=[<span class="hljs-string">&#x27;(&#123;&#125;&#123;&#125;&#123;&#125;)&#123;&#125;(&#123;&#125;&#123;&#125;&#123;&#125;)&#x27;</span>.<span class="hljs-built_in">format</span>(num[<span class="hljs-number">0</span>],sign[<span class="hljs-number">0</span>],num[<span class="hljs-number">1</span>],sign[<span class="hljs-number">1</span>],num[<span class="hljs-number">2</span>],sign[<span class="hljs-number">2</span>],num[<span class="hljs-number">3</span>]) <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> self.numset <span class="hljs-keyword">for</span> sign <span class="hljs-keyword">in</span> self.operatelist]<br>        s3=[<span class="hljs-string">&#x27;((&#123;&#125;&#123;&#125;&#123;&#125;)&#123;&#125;&#123;&#125;)&#123;&#125;&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(num[<span class="hljs-number">0</span>],sign[<span class="hljs-number">0</span>],num[<span class="hljs-number">1</span>],sign[<span class="hljs-number">1</span>],num[<span class="hljs-number">2</span>],sign[<span class="hljs-number">2</span>],num[<span class="hljs-number">3</span>]) <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> self.numset <span class="hljs-keyword">for</span> sign <span class="hljs-keyword">in</span> self.operatelist]<br>        s4=[<span class="hljs-string">&#x27;&#123;&#125;&#123;&#125;(&#123;&#125;&#123;&#125;(&#123;&#125;&#123;&#125;&#123;&#125;))&#x27;</span>.<span class="hljs-built_in">format</span>(num[<span class="hljs-number">0</span>],sign[<span class="hljs-number">0</span>],num[<span class="hljs-number">1</span>],sign[<span class="hljs-number">1</span>],num[<span class="hljs-number">2</span>],sign[<span class="hljs-number">2</span>],num[<span class="hljs-number">3</span>]) <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> self.numset <span class="hljs-keyword">for</span> sign <span class="hljs-keyword">in</span> self.operatelist]<br>        s5=[<span class="hljs-string">&#x27;&#123;&#125;&#123;&#125;((&#123;&#125;&#123;&#125;&#123;&#125;)&#123;&#125;&#123;&#125;)&#x27;</span>.<span class="hljs-built_in">format</span>(num[<span class="hljs-number">0</span>],sign[<span class="hljs-number">0</span>],num[<span class="hljs-number">1</span>],sign[<span class="hljs-number">1</span>],num[<span class="hljs-number">2</span>],sign[<span class="hljs-number">2</span>],num[<span class="hljs-number">3</span>]) <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> self.numset <span class="hljs-keyword">for</span> sign <span class="hljs-keyword">in</span> self.operatelist]<br>        solvelist=s1+s2+s3+s4+s5<br><br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> solvelist:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">eval</span>(item)-<span class="hljs-number">24</span>)&lt;<span class="hljs-number">0.01</span>:<br>                    <span class="hljs-built_in">print</span>(item)<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    a=[<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">12</span>]<br>    solve24=Solve24(a)<br>    solve24.solve()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>星期几</title>
    <link href="/2023/08/01/day/"/>
    <url>/2023/08/01/day/</url>
    
    <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">getDay</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> y, <span class="hljs-built_in">int</span> m, <span class="hljs-built_in">int</span> d</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (m &lt; <span class="hljs-number">3</span>) y--;<br>    <span class="hljs-built_in">int</span>[] a = &#123; <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span> &#125;;<br>    <span class="hljs-built_in">int</span> t = (y + y / <span class="hljs-number">4</span> - y / <span class="hljs-number">100</span> + y / <span class="hljs-number">400</span> + a[m - <span class="hljs-number">1</span>] + d) % <span class="hljs-number">7</span>;<br>    <span class="hljs-built_in">string</span> day = <span class="hljs-string">&quot;日一二三四五六&quot;</span>;<br>    Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;y&#125;</span>年<span class="hljs-subst">&#123;m&#125;</span>月<span class="hljs-subst">&#123;d&#125;</span>日 星期<span class="hljs-subst">&#123;day[t]&#125;</span>&quot;</span>);<br>&#125;<br><br>getDay(<span class="hljs-number">2023</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>补番列表</title>
    <link href="/2022/12/11/anime/"/>
    <url>/2022/12/11/anime/</url>
    
    <content type="html"><![CDATA[<h1 id="准备看"><a href="#准备看" class="headerlink" title="准备看"></a>准备看</h1><p>悠哉日常大王<br>银魂<br>擅长捉弄的高木同学<br>回转企鹅罐</p><p>有顶天家族<br>水星领航员<br>相聚一刻<br>神枪少女<br>我心里危险的东西<br>小鸠<br>零之使魔<br>稻荷恋之歌<br>明日酱的水手服<br>水色时代</p><hr><h1 id="看过"><a href="#看过" class="headerlink" title="看过"></a>看过</h1><h2 id="京都动画"><a href="#京都动画" class="headerlink" title="京都动画"></a>京都动画</h2><p>紫罗兰永恒花园<br>幸运星<br>凉宫春日的忧郁<br>声之形<br>冰菓<br>境界的彼方<br>轻音少女<br>玉子市场<br>全金属狂潮<br>小林家的龙女仆<br>吹响！上低音号<br>日常<br>中二病也要谈恋爱！</p><h2 id="KEY"><a href="#KEY" class="headerlink" title="KEY"></a>KEY</h2><p>CLANNAD<br>Kanon<br>AIR<br>星之梦<br>Angel Beats!<br>Charlotte<br>Rewrite<br>Little Busters!</p><h2 id="新海诚"><a href="#新海诚" class="headerlink" title="新海诚"></a>新海诚</h2><p>你的名字。<br>秒速五厘米<br>言叶之庭<br>她和她的猫<br>云之彼端，约定的地方<br>天气之子<br>铃芽之旅</p><h2 id="吉卜力"><a href="#吉卜力" class="headerlink" title="吉卜力"></a>吉卜力</h2><p>侧耳倾听<br>起风了<br>魔女宅急便<br>天空之城<br>红猪<br>风之谷<br>龙猫<br>幽灵公主<br>千与千寻<br>哈尔的移动城堡<br>悬崖上的金鱼姬<br>借东西的小人阿莉埃蒂<br>听见涛声<br>岁月的童话<br>虞美人盛开的山坡<br>猫的报恩<br>回忆中的玛妮</p><h2 id="今-敏"><a href="#今-敏" class="headerlink" title="今 敏"></a>今 敏</h2><p>红辣椒<br>东京教父<br>未麻的部屋<br>千年女优<br>妄想代理人</p><h2 id="型月"><a href="#型月" class="headerlink" title="型月"></a>型月</h2><p>空之境界<br>Fate<br>君主·埃尔梅罗二世事件簿<br>卫宫家今天的饭<br>FGO</p><h2 id="高桥留美子"><a href="#高桥留美子" class="headerlink" title="高桥留美子"></a>高桥留美子</h2><p>犬夜叉<br>人鱼之森<br>高桥留美子剧场<br>乱马1&#x2F;2</p><h2 id="细田守"><a href="#细田守" class="headerlink" title="细田守"></a>细田守</h2><p>未来的未来<br>龙与雀斑公主<br>夏日大作战<br>狼的孩子雨和雪<br>怪物之子</p><h2 id="长井龙雪"><a href="#长井龙雪" class="headerlink" title="长井龙雪"></a>长井龙雪</h2><p>我们仍未知道那天所看见的花的名字。<br>龙与虎<br>知晓天空之蓝的人啊<br>心灵想要大声呼喊</p><h2 id="新房昭之"><a href="#新房昭之" class="headerlink" title="新房昭之"></a>新房昭之</h2><p>物语系列<br>目隐都市的演绎者<br>戏言系列</p><h2 id="虚渊玄"><a href="#虚渊玄" class="headerlink" title="虚渊玄"></a>虚渊玄</h2><p>魔法少女小圆<br>心理测量者</p><h2 id="CLAMP"><a href="#CLAMP" class="headerlink" title="CLAMP"></a>CLAMP</h2><p>百变小樱<br>翼年代记</p><h2 id="大友克洋"><a href="#大友克洋" class="headerlink" title="大友克洋"></a>大友克洋</h2><p>回忆三部曲<br>大都会<br>阿基拉<br>蒸汽男孩</p><h2 id="安倍吉俊"><a href="#安倍吉俊" class="headerlink" title="安倍吉俊"></a>安倍吉俊</h2><p>玲音<br>灰羽联盟</p><h2 id="小野不由美"><a href="#小野不由美" class="headerlink" title="小野不由美"></a>小野不由美</h2><p>尸鬼<br>十二国记</p><h2 id="半年以上"><a href="#半年以上" class="headerlink" title="半年以上"></a>半年以上</h2><p>寒蝉鸣泣之时<br>某科学的超电磁炮<br>狐妖小红娘<br>刀剑神域<br>命运石之门<br>鬼灭之刃<br>妄想学生会<br>悠久之翼<br>学生会的一己之见<br>奇诺之旅<br>JOJO的奇妙冒险<br>天降之物<br>来自新世界<br>樱花庄的宠物女孩<br>电脑线圈<br>樱花任务<br>四月是你的谎言<br>未来日记<br>花开伊吕波<br>灼眼的夏娜<br>风灵玉秀<br>EVA<br>校园迷糊大王<br>攻壳机动队<br>葬送的芙莉莲<br>狼与香辛料<br>摇曳露营<br>橙路<br>小魔女学园<br>星际牛仔<br>混沌武士<br>夏日重现<br>Re：从零开始的异世界生活<br>圣诞之吻<br>时光代理人</p><h2 id="一季左右"><a href="#一季左右" class="headerlink" title="一季左右"></a>一季左右</h2><p>请问您今天要来点兔子吗？<br>干物妹！小埋<br>一周的朋友。<br>A CHANNEL<br>玻璃之花与崩坏的世界<br>比宇宙更远的地方<br>MYSELF;YOURSELF<br>文学少女<br>虚构推理<br>萤火之森<br>邻座的怪同学<br>宝石之国<br>白色相簿<br>SOLA<br>这个美术社大有问题！<br>变态王子与不笑猫<br>HELLO WORLD<br>Another<br>颠倒的帕特玛<br>奇蛋物语<br>佛兰德斯的狗<br>弹珠汽水<br>可塑性记忆<br>冬季花园<br>少女终末旅行<br>奇巧计程车<br>让我聆听爱的歌声<br>夏日幽灵<br>漂流少年<br>只有我不存在的城市<br>我想吃掉你的胰脏<br>人类衰退之后<br>此时此刻的我<br>快要坏掉的八音盒<br>彼が奏でるふたりの調べ<br>摇曳百合<br>Happy Sugar Life<br>孤独摇滚！<br>末日时在做什么？有没有空？可以来拯救吗？<br>神是中学生<br>意外的幸运签<br>魔法使的注意事项<br>魔女之旅<br>通往夏天的隧道，再见的出口<br>放学后失眠的你<br>空之音<br>花与爱丽丝杀人事件<br>河童之夏<br>FLCL<br>夏娃的时间<br>空中杀手<br>男子高中生的日常<br>夏之岚<br>败犬女主太多了！<br>跃动青春<br>蓦然回首<br>人狼<br>不时用俄语小声说真心话的邻桌艾莉同学<br>四叠半神话大系<br>企鹅公路<br>胆大党</p>]]></content>
    
    
    
    <tags>
      
      <tag>动画</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不畏风雨</title>
    <link href="/2020/10/25/rain/"/>
    <url>/2020/10/25/rain/</url>
    
    <content type="html"><![CDATA[<p>不畏大雨<br>不畏狂风<br>不畏冬雪与酷暑<br>我身强健<br>我心无欲<br>不惧不怒<br>无论何时静静微笑<br>日食四合粳米<br>味噌与蔬菜少许<br>所有一切<br>不以物喜<br>不以己悲<br>洞悉世事<br>铭记于心<br>原野松林庇荫处<br>寄居赋闲茅草屋<br>东方孩童病痛<br>我自前去诊治<br>西方老妪艰辛<br>我便帮其劳作<br>南方有人将死<br>我去劝慰安抚<br>北方兵戈四起<br>我来化解干戈<br>孤独时拭干眼泪<br>寒暑交替何所去<br>人常道我无情<br>没有掌声<br>不识艰辛<br>如此这般<br>我之所愿</p>]]></content>
    
    
    
    <tags>
      
      <tag>阅读</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
